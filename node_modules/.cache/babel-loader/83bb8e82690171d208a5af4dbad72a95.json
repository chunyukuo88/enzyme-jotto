{"ast":null,"code":"var _jsxFileName = \"/Users/alexgochenour/IdeaProjects/enzyme-jotto/src/GuessedWords.js\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst GuessedWords = props => /*#__PURE__*/React.createElement(\"div\", {\n  \"data-test\": \"component-guessed-words\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }\n}, props.guessedWords.length === 0 ? Instructions() : WordList(props));\n\nconst Instructions = () => /*#__PURE__*/React.createElement(\"div\", {\n  \"data-test\": \"guess-instructions\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, \"Guess a word!\");\n\nconst WordList = props => {\n  const rowsOfGuessedWords = props.guessedWords.map((word, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    \"data-test\": \"guessed-word\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }\n  }, word.guessedWord), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }\n  }, word.letterMatchCount)));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": \"guessed-words\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Guessed Words:\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"thead-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, \"Guess\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 35\n    }\n  }, \"Matching Letters\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, rowsOfGuessedWords)));\n};\n\nGuessedWords.propTypes = {\n  guessedWords: PropTypes.arrayOf(PropTypes.shape({\n    guessedWord: PropTypes.string.isRequired,\n    letterMatchCount: PropTypes.number.isRequired\n  })).isRequired\n};\nexport default GuessedWords;","map":{"version":3,"sources":["/Users/alexgochenour/IdeaProjects/enzyme-jotto/src/GuessedWords.js"],"names":["React","PropTypes","GuessedWords","props","guessedWords","length","Instructions","WordList","rowsOfGuessedWords","map","word","index","guessedWord","letterMatchCount","propTypes","arrayOf","shape","string","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,iBACjB;AAAK,eAAU,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKA,KAAK,CAACC,YAAN,CAAmBC,MAAnB,KAA8B,CAA9B,GACKC,YAAY,EADjB,GACsBC,QAAQ,CAACJ,KAAD,CAFnC,CADJ;;AAQA,MAAMG,YAAY,GAAG,mBACjB;AAAK,eAAU,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ;;AAMA,MAAMC,QAAQ,GAAIJ,KAAD,IAAW;AACxB,QAAMK,kBAAkB,GAAGL,KAAK,CAACC,YAAN,CAAmBK,GAAnB,CAAuB,CAACC,IAAD,EAAOC,KAAP,kBAC/C;AAAI,iBAAU,cAAd;AAA6B,IAAA,GAAG,EAAEA,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACE,WAAV,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAI,CAACG,gBAAV,CAFJ,CADwB,CAA3B;AAMA,sBACE;AAAK,iBAAU,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAO,IAAA,SAAS,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAJ,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAlB,CADJ,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACML,kBADN,CAJJ,CAFF,CADF;AAaH,CApBD;;AAsBAN,YAAY,CAACY,SAAb,GAAyB;AACrBV,EAAAA,YAAY,EAAEH,SAAS,CAACc,OAAV,CACVd,SAAS,CAACe,KAAV,CAAgB;AACZJ,IAAAA,WAAW,EAAEX,SAAS,CAACgB,MAAV,CAAiBC,UADlB;AAEZL,IAAAA,gBAAgB,EAAEZ,SAAS,CAACkB,MAAV,CAAiBD;AAFvB,GAAhB,CADU,EAKZA;AANmB,CAAzB;AASA,eAAehB,YAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst GuessedWords = (props) => (\n    <div data-test=\"component-guessed-words\">\n        {props.guessedWords.length === 0\n            ? Instructions() : WordList(props)\n        }\n    </div>\n);\n\nconst Instructions = () => (\n    <div data-test=\"guess-instructions\">\n        Guess a word!\n    </div>\n);\n\nconst WordList = (props) => {\n    const rowsOfGuessedWords = props.guessedWords.map((word, index) => (\n       <tr data-test=\"guessed-word\" key={index}>\n           <td>{word.guessedWord}</td>\n           <td>{word.letterMatchCount}</td>\n       </tr>\n    ));\n    return (\n      <div data-test=\"guessed-words\">\n        <h3>Guessed Words:</h3>\n        <table className=\"table table-sm\">\n            <thead className=\"thead-light\">\n                <tr><th>Guess</th><th>Matching Letters</th></tr>\n            </thead>\n            <tbody>\n                { rowsOfGuessedWords }\n            </tbody>\n        </table>\n      </div>\n    );\n};\n\nGuessedWords.propTypes = {\n    guessedWords: PropTypes.arrayOf(\n        PropTypes.shape({\n            guessedWord: PropTypes.string.isRequired,\n            letterMatchCount: PropTypes.number.isRequired\n        })\n    ).isRequired,\n};\n\nexport default GuessedWords;\n"]},"metadata":{},"sourceType":"module"}