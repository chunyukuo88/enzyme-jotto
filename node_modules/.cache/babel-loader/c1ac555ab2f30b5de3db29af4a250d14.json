{"ast":null,"code":"var _jsxFileName = \"/Users/alexgochenour/IdeaProjects/enzyme-jotto/src/Input.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nexport default function Input({\n  secretWord\n}) {\n  const [currentGuess, setCurrentGuess] = React.useState('');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-test\": \"input-box\",\n    className: \"mb-2 mx-sm-3\",\n    type: \"text\",\n    placeholder: \"Type a word!\",\n    value: currentGuess,\n    onChange: event => setCurrentGuess(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-test\": \"submit-button\",\n    className: \"btn btn-primary mb-2\",\n    onClick: () => {\n      setCurrentGuess('');\n    } //TODO: update guessedWords.\n    //TODO: Check against the secretWord, update `success` context.\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, \"Submit Guess\")));\n}\n;\nInput.propTypes = {\n  secretWord: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/alexgochenour/IdeaProjects/enzyme-jotto/src/Input.js"],"names":["React","PropTypes","Input","secretWord","currentGuess","setCurrentGuess","useState","event","target","value","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAA4B;AACvC,QAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCL,KAAK,CAACM,QAAN,CAAe,EAAf,CAA1C;AAEA,sBACI;AAAK,iBAAU,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,iBAAU,WADd;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,WAAW,EAAC,cAJhB;AAKI,IAAA,KAAK,EAAEF,YALX;AAMI,IAAA,QAAQ,EAAGG,KAAD,IAAWF,eAAe,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CANxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AACI,iBAAU,eADd;AAEI,IAAA,SAAS,EAAC,sBAFd;AAGI,IAAA,OAAO,EAAE,MAAM;AAEfJ,MAAAA,eAAe,CAAC,EAAD,CAAf;AAAoB,KAFb,CAGP;AACA;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,CADJ,CADJ;AAwBH;AAAA;AAEDH,KAAK,CAACQ,SAAN,GAAkB;AACdP,EAAAA,UAAU,EAAEF,SAAS,CAACU,MAAV,CAAiBC;AADf,CAAlB","sourcesContent":["import React  from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Input({secretWord}){\n    const [ currentGuess, setCurrentGuess ] = React.useState('');\n\n    return (\n        <div data-test=\"input\">\n            <form className=\"form-inline\">\n                <input\n                    data-test=\"input-box\"\n                    className=\"mb-2 mx-sm-3\"\n                    type=\"text\"\n                    placeholder=\"Type a word!\"\n                    value={currentGuess}\n                    onChange={(event) => setCurrentGuess(event.target.value)}\n                />\n                <button\n                    data-test=\"submit-button\"\n                    className=\"btn btn-primary mb-2\"\n                    onClick={() => {\n\n                    setCurrentGuess('')}\n                    //TODO: update guessedWords.\n                    //TODO: Check against the secretWord, update `success` context.\n                    }\n                >Submit Guess</button>\n            </form>\n        </div>\n    );\n};\n\nInput.propTypes = {\n    secretWord: PropTypes.string.isRequired,\n}\n\n"]},"metadata":{},"sourceType":"module"}